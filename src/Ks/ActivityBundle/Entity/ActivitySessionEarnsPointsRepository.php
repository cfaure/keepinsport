<?php

namespace Ks\ActivityBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ActivitySessionEarnsPointsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActivitySessionEarnsPointsRepository extends EntityRepository
{
    public function hasAlreadyEarnPoints(\Ks\ActivityBundle\Entity\ActivitySession $activitySession, \Ks\UserBundle\Entity\User $user)
    {      
        $queryBuilder = $this->_em->createQueryBuilder();
        $queryBuilder->select('count(asep)')
                ->from('KsActivityBundle:ActivitySessionEarnsPoints', 'asep')
                ->where('asep.activitySession = ?1')
                ->andWhere('asep.user = ?2')
                ->setParameter(1, $activitySession->getId())
                ->setParameter(2, $user->getId());
        
        $query = $queryBuilder->getQuery();
        
        $result = (int)$query->getSingleScalarResult();

        return ($result == 0 ? false : true);
    }
    
    public function addPointsToTheSession(\Ks\ActivityBundle\Entity\ActivitySession $activitySession, \Ks\UserBundle\Entity\User $user, $points)
    {
        $activitySessionEarnsPoints = new ActivitySessionEarnsPoints($activitySession, $user, $points);       
        $this->_em->persist($activitySessionEarnsPoints);
        $this->_em->flush();
        
        return $activitySessionEarnsPoints;
    }
    
    public function getPoints(\Ks\ActivityBundle\Entity\ActivitySession $activitySession, \Ks\UserBundle\Entity\User $user)
    {
        $queryBuilder = $this->_em->createQueryBuilder();
        $queryBuilder->select('asep.points')
                ->from('KsActivityBundle:ActivitySessionEarnsPoints', 'asep')
                ->where('asep.activitySession = ?1')
                ->andWhere('asep.user = ?2')
                ->setParameter(1, $activitySession->getId())
                ->setParameter(2, $user->getId());
        
        $query = $queryBuilder->getQuery();

        return (int) $query->getSingleScalarResult();
    }
}