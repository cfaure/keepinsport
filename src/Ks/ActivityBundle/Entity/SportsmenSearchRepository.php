<?php

namespace Ks\ActivityBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SportsmenSearchRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SportsmenSearchRepository extends EntityRepository
{
    /**
     *
     * @param User $user
     * @return type 
     */
    public function getRandomSportsmenSearchByProximity(\Ks\UserBundle\Entity\User $user)
    {
        $sportsmenSearchAround    = array();
        $userInfos = array();
        $userDetail     = $user->getUserDetail();

        //On cherche de activité dans un rayon de 10,20,50km 
        if (!empty($userDetail) && $userDetail->getLatitude() && $userDetail->getLongitude()) { 
            $userInfos["userId"] = $user->getId();
            $userInfos["latitude"] = $userDetail->getLatitude();
            $userInfos["longitude"] = $userDetail->getLongitude();
            $sportsmenSearchAround = $this->searchNearbySportsmenSearch(
                $userInfos,
                1000
            );
            
        }

        return $sportsmenSearchAround;
    }
    
    /**
     * On cherche par proximite gÃ©ographique par rapport Ã  $userDetail
     * 
     * @param $userInfos
     * @param int $range Rayon de la recherche, en km
     * @param int $limit Limite le nombre d'utilisateurs retrouvÃ©s
     * 
     * @return array Tableau des utilisateurs Ã  proximitÃ©
     */
    public function searchNearbySportsmenSearch($userInfos, $range, $limit = 5)
    {
        $sql = "SELECT a.id, "
            //." u.id as user_id, u.username as username, ud.image_name as user_imageName, ud.firstname, ud.lastname, "
            .' a.scheduledAt, '
            //.' ll.starNumber as ll_starNumber,'
            //.' ll_category.label as ll_categoryLabel,'
            .' programmedPlace.id as programmedPlace_id, programmedPlace.full_adress as programmedPlace_fullAdress, programmedPlace.town_code as programmedPlace_town_code, programmedPlace.town_label as programmedPlace_town_label, programmedPlace.county_code as programmedPlace_county_code, programmedPlace.county_label as programmedPlace_county_label, programmedPlace.region_code as programmedPlace_region_code, programmedPlace.region_label as programmedPlace_region_label, programmedPlace.country_code as programmedPlace_country_code, programmedPlace.country_label as programmedPlace_country_label, programmedPlace.full_adress as programmedPlace_fullAdress, programmedPlace.latitude as programmedPlace_latitude, programmedPlace.longitude as programmedPlace_longitude, '
            .' sport.label as sport_label, sport.codeSport as sport_codeSport, '
            ." (ROUND(6366 * acos(cos(radians(".$userInfos["latitude"].")) * cos(radians(`latitude`))"
                ." * cos(radians(`longitude`) - radians(".$userInfos["longitude"]."))"
                ." + sin(radians(".$userInfos["latitude"].")) * sin(radians(`latitude`))))) as proximity"
            ." FROM ks_activity a"
            //.' LEFT JOIN ks_user u on (a.user_id = u.id)'
            //.' LEFT JOIN ks_user_detail ud on (u.userDetail_id = ud.id)'
            .' INNER JOIN ks_place programmedPlace on (a.programmedPlace_id = programmedPlace.id)'
            .' LEFT JOIN ks_sport sport on (a.sport_id = sport.id)'
            //.' LEFT JOIN ks_league_level ll on (ll.id = u.leagueLevel_id)'
            //.' LEFT JOIN ks_league_category ll_category on (ll.category_id = ll_category.id)'
            ." WHERE 1"
            //." AND u.id not in (".$userInfos["userId"].")"
            .' AND a.scheduledAt >= NOW() '
            ." HAVING proximity >= 0 AND proximity < $range"
            ." ORDER BY rand()"
            ." LIMIT $limit";
        
        $dbh        = $this->_em->getConnection();
        $results    = $dbh->query($sql)->fetchAll(\PDO::FETCH_ASSOC);
                
        return $results;
    }
}