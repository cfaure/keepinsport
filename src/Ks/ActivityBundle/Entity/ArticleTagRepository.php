<?php

namespace Ks\ActivityBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleTagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleTagRepository extends EntityRepository
{
    /*public function resetArticleTags(\Ks\ActivityBundle\Entity\Article $article, $tagsTab) {
        $articleTagsRep = $this->_em->getRepository('KsActivityBundle:ArticleTag');
        
        //On enlève tous les tags d'un article
        foreach( $article->getTags() as $tag ) {
            $article->removeArticleTag( $tag );
        }
        //On ajoute les nouveau tags
        foreach( $tagsTab as $tagId ) {
            $tag = $articleTagsRep->find( $tagId );
            if ( $tag ) {
                $article->addArticleTag( $tag );
            }
        }
      
        $this->_em->persist($article);
        $this->_em->flush();
    }*/
    
    /**
     * Pour ajouter un tag
     */
    public function addTag($tagName)
    {
        $tagName = ucfirst(strtolower($tagName));
        $articleTag = new \Ks\ActivityBundle\Entity\ArticleTag($tagName);

        $this->_em->persist($articleTag);
        $this->_em->flush();
        
        return $articleTag;
    }
    
    /**
     * @param  int $idUser 
     * @return object Users 
     */
    public function getTagIsCategory()
    {
        //FMO : !=3 pour ne pas permettre la création d'article de type 3 depuis le menu avancé.
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('KsActivityBundle:ArticleTag', 'u')
            ->where('u.isCategory = 1')
            ->andWhere('u.id != 3')
            ->addOrderBy('u.id', 'desc');
        
        return $qb;
    }
    
    /**
     * @param  int $idUser 
     * @return object Users 
     */
    public function getTagIsCategoryWithTrainingPlan()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from('KsActivityBundle:ArticleTag', 'u')
            ->where('u.isCategory = 1')
            ->addOrderBy('u.id', 'desc');
        
        return $qb;
    }
}