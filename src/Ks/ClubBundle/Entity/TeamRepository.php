<?php

namespace Ks\ClubBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TeamRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TeamRepository extends EntityRepository
{
     /**
     *
     * @return query builder de mes équipes classés par ordre alphabétique
     */
    public function findMyTeamsQB(\Ks\ActivityBundle\Entity\Sport $sport, \Ks\UserBundle\Entity\User $user )
    {      
        $queryBuilder = $this->_em->createQueryBuilder();
 
        $queryBuilder->select('t')
                ->from('KsClubBundle:Team', 't')
                ->leftJoin('t.players', 'p')
                ->where('p.player = ?1')
                ->andWhere('t.sport = ?2')
                ->setParameter(1, $user->getId())
                ->setParameter(2, $sport->getId())
                ->orderBy('t.label', 'ASC');

        return $queryBuilder;

    }
    
    /**
     *
     * @return query builder des équipes adverses classés par ordre alphabétique
     */
    public function findOthersTeamsQB(\Ks\ActivityBundle\Entity\Sport $sport, \Ks\UserBundle\Entity\User $user )
    {      
        $queryBuilder = $this->_em->createQueryBuilder();
 
        $queryBuilder->select('t')
                ->from('KsClubBundle:Team', 't')
                ->leftJoin('t.players', 'p')
                //->where('p.player != ?1')
                ->andWhere('t.sport = ?2')
                //->setParameter(1, $user->getId())
                ->setParameter(2, $sport->getId())
                ->orderBy('t.label', 'ASC');

        return $queryBuilder;

    }
    
    public function findTeamsWithUsersAndLastTeamCompositions( $clubId ) {
        $queryBuilder = $this->_em->createQueryBuilder();
 
        $queryBuilder
                ->select('t.id')
                ->addSelect('t.label')
                ->from('KsClubBundle:Team', 't')
                ->where('t.club = ?0')
                //->setParameter(1, $user->getId())
                ->setParameter(0, $clubId)
                ->orderBy('t.label', 'ASC');
        
        $query = $queryBuilder->getQuery();
        $teams = $query->getArrayResult();
        
        foreach( $teams as $key => $team ) {
            $qbUsers = $this->_em->createQueryBuilder();
            $qbUsers
                    ->select('u.id')
                    ->addSelect('u.username')
                    ->addSelect('ud.firstname')
                    ->addSelect('ud.lastname')
                    ->addSelect('ud.imageName')
                    ->from('KsUserBundle:User', 'u')
                    ->leftJoin('u.userDetail', 'ud')
                    ->innerJoin('u.teams', 'thu')
                    ->where('thu.team = ?0')
                    ->setParameter(0, $team["id"])
                    ->orderBy('u.username', 'ASC')
                    ->addOrderBy('ud.firstname', 'ASC')
                    ->addOrderBy('ud.lastname', 'ASC');

            $teams[$key]["users"] = $qbUsers->getQuery()->getArrayResult();
            
            $qbTeamCompositions = $this->_em->createQueryBuilder();
            $qbTeamCompositions
                    ->select('tc.id')
                    ->addSelect('tc.name')
                    ->addSelect('tc.date')
                    ->from('KsClubBundle:TeamComposition', 'tc')
                    ->where('tc.team = ?0')
                    ->setParameter(0, $team["id"])
                    ->setMaxResults(5)
                    ->orderBy('tc.date', 'DESC');

            $teams[$key]["teamCompositions"] = $qbTeamCompositions->getQuery()->getArrayResult();
            
            foreach( $teams[$key]["teamCompositions"] as $key2 => $teamComposition ) {
                $qbUsers = $this->_em->createQueryBuilder();
                $qbUsers
                        ->select('u.id')
                        ->addSelect('u.username')
                        ->addSelect('ud.firstname')
                        ->addSelect('ud.lastname')
                        ->addSelect('ud.imageName')
                        ->from('KsUserBundle:User', 'u')
                        ->leftJoin('u.userDetail', 'ud')
                        ->innerJoin('u.teams', 'thu')
                        ->innerJoin('thu.team', 't')
                        ->innerJoin('t.teamCompositions', 'tc')
                        ->where('tc.id = ?0')
                        ->setParameter(0, $teamComposition["id"])
                        ->orderBy('u.username', 'ASC')
                        ->addOrderBy('ud.firstname', 'ASC')
                        ->addOrderBy('ud.lastname', 'ASC');

                $teams[$key]["teamCompositions"][$key2]["users"] = $qbUsers->getQuery()->getArrayResult();
            }
        }

        return $teams;
    }

}