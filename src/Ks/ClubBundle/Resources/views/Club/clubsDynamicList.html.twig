{% extends "KsUserBundle::layout.html.twig" %}

{% block title %}
	{{ parent() }}
{% endblock %}
        
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('js/jquery.quicksand.js') }}"></script>
    {#<script type="text/javascript" src="http://www.google.com/jsapi"></script>#}
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false"></script>
    <script type="text/javascript">

        // Custom sorting plugin
        (function($) {
          $.fn.sorted = function(customOptions) {
            var options = {
              reversed: false,
              by: function(a) { return a.text(); }
            };
            $.extend(options, customOptions);
            $data = $(this);
            arr = $data.get();
            arr.sort(function(a, b) {
              var valA = options.by($(a));
              var valB = options.by($(b));
              if (options.reversed) {
                return (valA < valB) ? 1 : (valA > valB) ? -1 : 0;				
              } else {		
                return (valA < valB) ? -1 : (valA > valB) ? 1 : 0;	
              }
            });
            return $(arr);
          };
          
        })(jQuery);
        
        function stringToDateTime(string) {
            var maDate=new Date()
            var tabDateTime=string.split('\/');

            maDate.setDate(tabDateTime[0]);
            maDate.setMonth(tabDateTime[1]);
            maDate.setYear(tabDateTime[2]);

            return maDate;
       }
        

        // DOMContentLoaded
        $(document).ready(function() {
            /*$("#bFilterByText").click(function() {
                console.log( $("#textForFilter").val() );
                
                var $applications = $('#applications');

                // clone applications to get a second collection
                var $data = $applications.clone();
                
                var $filteredData = $data.find('li[data-type=' + $filterActiveType.val() + '].clubBloc');
            });*/
            
            $("a[rel=tooltip], img[rel=tooltip], span[rel=tooltip]").tooltip();
            
            //On calcule la proximité de chaque utilisateur
            {% if app.user.userDetail is not null and app.user.userDetail.latitude is not null and app.user.userDetail.longitude is not null %}
                if ( typeof google != "undefined" ) {
                    var myCoordonate = new google.maps.LatLng({{ app.user.userDetail.latitude }}, {{ app.user.userDetail.longitude }});  
                }

            {% endif %}
            $.each($("ul.clubInfosToSort"), function (i, ul) {
                $latitude = $( ul ).find('li.latitude');
                $longitude = $( ul ).find('li.longitude');
                $latitude.hide();
                $longitude.hide();
                $proximity = $( ul ).find('li.proximity');
                
                if ( typeof myCoordonate != "undefined" && typeof google != "undefined" && $latitude.length == 1 || $longitude.length == 1 ) {
                    var latitudeClub = parseFloat($latitude.html());
                    var longitudeClub = parseFloat($longitude.html());
                    var coordonateClub = new google.maps.LatLng(latitudeClub, longitudeClub);
                    var distanceKm = google.maps.geometry.spherical.computeDistanceBetween(myCoordonate, coordonateClub);
                    distanceKm = distanceKm/1000;
                    $proximity.attr( "data-proximity", distanceKm );
                    $proximity.html( "<u>Proximité :</u> " + parseInt( distanceKm ) + "km" );
                } else {
                    $proximity.attr( "data-proximity", 99999999 );
                    $proximity.html( "<u>Proximité :</u> inconnu" );
                }
            });

            // bind radiobuttons in the form
            var $filterBloc       = $('#filter');
            var $filterTypeBloc   = $filterBloc.find("div#filterTypeBloc");
            var $filterTypes      = $filterBloc.find('button[name="type"]');
            var $filterSorts      = $filterBloc.find('button[name="sort"]');


            // get the first collection
            var $applications = $('#applications');

            // clone applications to get a second collection
            var $data = $applications.clone();
 
            
            $filterTypes.add($filterSorts).click(function(e) { 
                
                /*switch ( $( this ).attr( "name" ) )
                {
                    case "type":
                        var $filterActiveType = $( this );
                        var $filterActiveSort = $filterBloc.find('button[name="sort"].active');
                        break; 
                        
                     case "sort":
                        var $filterActiveType = $filterBloc.find('button[name="type"].active');
                        var $filterActiveSort = $( this );
                        break;  
                }

                if ( $filterActiveType.val() == 'all') {
                  var $filteredData = $data.find('li.clubBloc');
                } else {
                  var $filteredData = $data.find('li[data-type=' + $filterActiveType.val() + '].clubBloc');
                }*/
               
                var $filteredData = $data.find('li.clubBloc');
                var $filterActiveSort = $( this );
                //Sort
                switch ( $filterActiveSort.val() )
                {
                    case "name":
                        var $sortedData = $filteredData.sorted({
                            by: function(v) {  
                              return $(v).find('li.name').attr("data-name").toLowerCase();
                            }
                        });
                        break; 
                        
                   case "proximity":
                       var $sortedData = $filteredData.sorted({
                            by: function(v) {
                              return parseFloat($(v).find('li.proximity').attr("data-proximity"));
                            }
                        });
                       break;
                }
                
                // finally, call quicksand
                $applications.quicksand($sortedData, {
                  duration: 800,
                  easing: 'easeInOutQuad'
                });
            });

            

        });

    </script>
{% endblock %}
    
{% block content %}
    <center><h3>Tous les clubs</h3></center>
    <br/>
    <br/>
    {#<div class="input-prepend input-append control-group">
        <input id="textForFilter" type="text" class="input-xlarge" value=""/>
        <a id="bFilterByText" class="btn add-on" >Filtrer</a>
    </div>#}
    <form id="filter">
        {#<div >Filtrer par : </div>
        <div id="filterTypeBloc" class="btn-group" style="float:left" data-toggle="buttons-radio">
            <button type="button" class="btn btn-clubs active" name="type" value="all">Tous</button>
            <button type="button" class="btn btn-clubs" name="type" value="gold">Ligue Or</button>
            <button type="button" class="btn btn-clubs" name="type" value="silver">Ligue Argent</button>
            <button type="button" class="btn btn-clubs" name="type" value="bronze">Ligue Bronze</button>
            <button type="button" class="btn btn-clubs" name="type" value="other">Ligue Chocolat/ Pas de ligue</button>
        </div>
        <br clear="all"/>
        <br/>#}
        <div>Classer par : </div>
        <div class="btn-group"  data-toggle="buttons-radio">
            <button type="button" class="btn btn-clubs" name="sort" value="name">Nom</button>
             {% if app.user.userDetail is not null and app.user.userDetail.latitude is not null and app.user.userDetail.longitude is not null %}
                <button type="button" class="btn btn-clubs" name="sort" value="proximity">Proximité</button>
            {% endif %}
        </div>
        <br class="clearfix"/>
    </form>

    <ul id="applications" class="image-grid">
    {% for key, club in clubs %}           
            <li class="clubBloc thumbnail" data-id="{{ club.id }}" data-type="" >
                <center>
                    {% include 'KsClubBundle:Club:_clubImage.html.twig' with {'club' : club }%}
                </center>
                <br/>
                <ul class="clubInfosToSort">  
                    <li class="name" data-name="{{ club.name }}" style="margin-left:-25px"><center>{{ club.name }}</center></li>
                    
                    {% if club.latitude is not null and club.longitude is not null %}
                    <li class="latitude" style="display:none">{{ club.latitude }}</li>
                    <li class="longitude" style="display:none">{{ club.longitude }}</li>
                    {% endif %}
                    <li class="proximity" data-proximity=""><u>Proximité :</u> Inconnu</li>
                    <li class="sports" data-sports=""><u class="pull-left">Sports :</u>
                        {% if club.sports is defined and club.sports|length > 0 %}
                            {% for sport in club.sports %}
                                <span rel="tooltip" title="{{ sport.label }}" class="pull-left">
                                    {% if asset('img/sports/' ~ sport.codeSport ~ '.png')|issetImg %}
                                        <img width="25px" src="{{ asset('img/sports/' ~ sport.codeSport ~ '.png') }}"/>
                                    {% else %}
                                        <img width="25px" src="{{ asset('img/sports/running.png') }}"/>
                                    {% endif %}
                                </span>
                            {% endfor %}
                            <br class="clearfix"/>
                        {% else %}
                            - 
                        {% endif %}
                    </li>
                    <li>
                        <br/>
                        <a class="btn btn-mini btn-clubs" title="Voir {{ club.name }}" href="{{ path('ksClub_public_profile', { 'clubId' : club.id }) }}">
                            <i class="icon-search icon-white"></i>
                        </a>
                        {% if club|is_manager( app.user.id ) %}
                            <a class="btn btn-mini btn-clubs" title="Editer {{ club.name }}" href="{{ path('ksClubAdmin_actions', { 'clubId' : club.id }) }}">
                                <i class="glyphicon glyphicon-pencil icon-white"></i>
                            </a>
                        {% endif %}
                        <div style="margin-top:5px">
                            {% include 'KsClubBundle:Club:_askForMembershipLink.html.twig' with {'club': club } %}
                        </div>
                    </li>
                </ul>
            </li>
        {% endfor %}
    </ul>
    
   <br clear="all"/>

    
    <style>  

    .image-grid > li {
        width: 170px;
        margin: 20px 0 0 35px;
        float: left;
        text-align: center;
        font-family: "Helvetica Neue", sans-serif;
        /*line-height: 17px;*/
        color: #686f74;
        height: 200px;
        overflow: hidden;
        border: 1px solid #DDDDDD;
        border-radius: 4px 4px 4px 4px;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075);
        line-height: 1;
        padding: 4px;
    }

    .image-grid li img,
    .image-grid li strong {
      display: block;
    }

    .image-grid li strong {
      color: #fff;
    }
    
    li.clubBloc {
        text-align: left;
    }
    
    li.clubBloc ul{
        list-style-type: none;
    }
    
    span.categoryBloc {
        width: 12px;
        height: 12px;
        display: inline-block;
        border: 1px solid black;
        border-radius: 50%;
    }
    
    span.categoryBloc.bronze {
        background-color: #d16909;
    }
    
    span.categoryBloc.silver {
        background-color: #dddcd9;
    }
    
    span.categoryBloc.gold {
        background-color: #e8b419;
    }
    </style>
{% endblock %}        
