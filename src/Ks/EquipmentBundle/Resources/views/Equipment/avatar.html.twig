    <!-- The file upload form used as target for the file upload widget -->
    <form class="fileUploadForm" action="{{path('ksImage_ajax_upload', {'uploadDirName' : uploadDirName })}}" method="POST" enctype="multipart/form-data">
        <div class="fileupload-buttonbar">
            <div style="text-align: center">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-sportif fileinput-button addFileButton">
                    <i class="glyphicon glyphicon-plus icon-white"></i>
                    <span>{{ 'equipment.avatar-change'|trans }}</span>
                    <input class="filesInputDl" type="file" name="files[]" multiple>
                </span>
                <!--<button type="submit" class="btn btn-sportif start">
                    <i class="icon-upload icon-white"></i>
                    <span>Démarrer le téléchargement</span>
                </button>
                <br/>
                <button type="reset" class="btn btn-warning cancel">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>Annuler le téléchargement</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="icon-trash icon-white"></i>
                    <span>Effacer</span>
                </button>
                <input type="checkbox" class="toggle">-->
            </div>
            <div >
                <div class="progress progress-success progress-striped active fade">
                    <div class="bar" style="width:0%;"></div>
                </div>
            </div>
        </div>
        <div class="fileupload-loading"></div>
        <table id="fileuploadTable" class="table table-striped">
            <tbody class="files" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody>
        </table>

    </form>

{% raw %}
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td class="preview"><span class="fade"></span></td>
        <!--<td class="name"><span>{%=file.name%}</span></td>-->
        <td></td>
        <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
        {% if (file.error) { %}
            <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
        {% } else if (o.files.valid && !i) { %}
            <td>
                <div class="progress progress-success progress-striped active"><div class="bar" style="width:0%;"></div></div>
            </td>
            <td class="start">{% if (!o.options.autoUpload) { %}
                <button class="btn btn-sportif">
                    <i class="icon-upload icon-white"></i>
                    <span>{% endraw %}{{ 'actions.start'|trans }}{% raw %}</span>
                </button>
            {% } %}</td>
        {% } else { %}
            <td colspan="2"></td>
        {% } %}
        <td class="cancel">{% if (!i) { %}
            <button class="btn btn-warning">
                <i class="icon-ban-circle icon-white"></i>
                <span>{% endraw %}{{ 'actions.cancel'|trans }}{% raw %}</span>
            </button>
        {% } %}</td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade" imgName="{%=file.name%}">
        {% if (file.error) { %}
            <td class="preview"><span class=""></span></td>
            <!--<td class="name"><span>{%=file.name%}</span></td>-->
            <td></td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td class="error" colspan="2"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
        {% } else { %}
            <td class="preview">
                <td class="name"><span>{%=file.name%}</span></td>
            </td>
            <td></td>
            <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
            <td colspan="2"></td>
        {% } %}
        <td class="delete">
            <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}" onclick="refreshDataGPX()">
                <i class="icon-trash icon-white"></i>
                <span>{% endraw %}{{ 'actions.delete'|trans }}{% raw %}</span>
            </button>
             <!--<input type="checkbox" name="delete" value="1">-->
        </td>
    </tr>
{% } %}
</script>
{% endraw %}

{#{if error === 1}}File exceeds upload_max_filesize (php.ini directive)
            {{else error === 2}}File exceeds MAX_FILE_SIZE (HTML form directive)
            {{else error === 3}}File was only partially uploaded
            {{else error === 4}}No File was uploaded
            {{else error === 5}}Missing a temporary folder
            {{else error === 6}}Failed to write file to disk
            {{else error === 7}}File upload stopped by extension
            {{else error === 'maxFileSize'}}File is too big
            {{else error === 'minFileSize'}}File is too small
            {{else error === 'acceptFileTypes'}}Filetype not allowed
            {{else error === 'maxNumberOfFiles'}}Max number of files exceeded
            {{else error === 'uploadedBytes'}}Uploaded bytes exceed file size
            {{else error === 'emptyResult'}}Empty file upload result
            {{else}}${error}
            {{/if}#}
<script type="text/javascript">
$(function () {
    //'use strict';

   //
    
    // Initialize the jQuery File Upload widget:
    /*$('#fileupload').fileupload({
        acceptFileTypes : /(\.|\/)(gif|jpe?g|png)$/i,
        maxNumberOfFiles : 1
    });*/
    
    /*$('#fileupload').fileupload('option', {
        acceptFileTypes : /(\.|\/)(gif|jpe?g|png)$/i,
        maxNumberOfFiles : 1
    });*/
    
    /*$('#fileupload').fileupload(
        'option',
        'success',
        function (e, data) {
            uploadedPhotosBloc.append(
                $("<input>", {})
                    .addClass("uploaded_photo")
                    .val(e[0].name)
            );
        }
    );*/

    // Enable iframe cross-domain access via redirect option:
    /*$('#fileupload').fileupload(
        'option',
        'redirect',
        window.location.href.replace(
            /\/[^\/]*$/,
            '/cors/result.html?%s'
        )
    );*/

    /*if (window.location.hostname === 'blueimp.github.com') {
        // Demo settings:
        $('#fileupload').fileupload('option', {
            url: '//jquery-file-upload.appspot.com/',
            maxFileSize: 5000000,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            resizeMaxWidth: 1920,
            resizeMaxHeight: 1200
        });
        // Upload server status check for browsers with CORS support:
        if ($.support.cors) {
            $.ajax({
                url: '//jquery-file-upload.appspot.com/',
                type: 'HEAD'
            }).fail(function () {
                $('<span class="alert alert-error"/>')
                    .text('Upload server currently unavailable - ' +
                            new Date())
                    .appendTo('#fileupload');
            });
        }
    } else {
        // Load existing files:
        $('#fileupload').each(function () {
            var that = this;
            $.getJSON(this.action, function (result) {
                if (result && result.length) {
                    $(that).fileupload('option', 'done')
                        .call(that, null, {result: result});
                }
            });
        });
    }*/

});
</script>
