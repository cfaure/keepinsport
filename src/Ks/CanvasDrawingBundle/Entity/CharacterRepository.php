<?php

namespace Ks\CanvasDrawingBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CharactersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CharacterRepository extends EntityRepository
{
    public function findCharacters( array $params = array() ) {
        $dbh        = $this->_em->getConnection();
        $userRep    = $this->_em->getRepository('KsUserBundle:User');
        
        $vars       = array();  
        $sqlParts   = array(
            'select' => 'SELECT'
                .' c.sexeCode, c.skinColor, c.hairColor, c.eyesColor, c.shirtColor, c.shortColor, c.shoesPrimaryColor, c.shoesSecondaryColor'
            ,
            'from'  => 'FROM ks_canvas_drawing_character c'
            .' LEFT JOIN ks_user u on (c.id = u.character_id)'
            ,
            'where' => "WHERE 1",
            'group' => 'GROUP BY c.id',
            'order' => '',
            'limit' => ''
        );
        
        if( isset( $params['userId'] ) && $params['userId'] != '' ) {
            $sqlParts["where"] .= ' AND u.id = :userId';
            $vars['userId'] = $params['userId'];
        }      
        
        $stmt = $dbh->executeQuery(implode(' ', $sqlParts), $vars);
        
        $characters = array();
        while( $character = $stmt->fetch(\PDO::FETCH_ASSOC) ) {
                
            $characters[] = $character;
        }
        
        return $characters;
    }
    
    public function findOneCharacter( array $params = array() ) {
        $characters = $this->findCharacters( $params );
        
        if( count( $characters) > 0 ) return $characters[0];
        else return null;   
    }
}